import path from "node:path";
import { createWriteStream } from "fs";
import { Readable } from "stream";
import { finished } from "stream/promises";
import { execSync } from "node:child_process";
import { access as cbAccess } from "node:fs";
import { promisify } from "node:util";

const access = promisify(cbAccess);

export const initPackageJson = async () => {
    try {
      await access(path.resolve("./package.json"));
    } catch (error) {
      execSync(`npm init -y`);
  
      try {
        execSync(`npm version 0.0.0 --no-git-tag-version`);
      } catch {}
    }
  };
  
 export const createGitignore = async () => {
    try {
      await access(path.resolve("./.gitignore"));
    } catch {
      const res = await fetch(
        "https://git.inno-js.ru/primakov/ignore/raw/commit/ba600fcbab3be6c7247a38f92fd4f4b317247098/.gitignore"
      );
  
      if (res.ok) {
        const fileStream = createWriteStream(path.resolve("./.gitignore"), {
          flags: "wx",
        });
        await finished(Readable.fromWeb(res.body).pipe(fileStream));
      }
    }
  };