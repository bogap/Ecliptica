import prompts from "prompts";
import yargs from "yargs";

// TODO: Change to kleur cose it is prompts dep
// TODO: link - https://github.com/terkelg/prompts?tab=readme-ov-file#onrender
import chalk from "chalk";

import { createIjlCli } from "./utils/ijl-cli.js";
import { createGitignore, initPackageJson } from "./utils/init-files.js";
import { createmicrofrontend } from "./utils/create.js";

prompts.override(yargs.argv);

const onCancel = (messsage = "Отмена") =>
  console.log(chalk.redBright.bgBlack.bold(messsage));

export const promtsData = {
  prompt: [
    {
      type: "select",
      name: "comand",
      message: "Создаём проект",
      choices: [
        { title: "Запустить brojs (beta)", value: "bro" },
        {
          title: "Инициализировать проект с помощью @ijl/cli ?",
          value: "ijl-cli",
        },
        { title: "Отмена", value: "cancel" },
      ],
    },
  ],
  on: {
    bro: async () => {
      await initPackageJson();
      createGitignore();
    },
    cancel: onCancel,
  },
  next: {
    "ijl-cli": {
      prompt: [
        {
          type: "select",
          name: "comand",
          message: "Режим",
          choices: [
            { title: "Обычный", value: "common" },
            { title: "advanced", value: "advanced" },
          ],
        },
      ],
      on: {
        common: createIjlCli,
        advanced: createIjlCli,
      },
    },
    bro: {
      prompt: [
        {
          type: "select",
          name: "comand",
          message: "Что будем создавать?",
          choices: [
            { title: "frontend", value: "pl" },
            // { title: "backend (nope)", value: "bh" },
            { title: "Отмена", value: "cancel" },
          ],
        },
      ],
      on: {
        bh: () => onCancel("Пока не реализовано"),
        cancel: onCancel,
      },
      next: {
        pl: {
          prompt: [
            {
              type: "select",
              name: "comand",
              message: "Что будем создавать?",
              choices: [
                { title: "microfrontend", value: "frontend-micro" },
                {
                  title: "microfrontend advanced",
                  value: "frontend-micro-adv",
                },
                // { title: "simple spa", value: "spa" },
                { title: "Отмена", value: "cancel" },
              ],
            },
          ],
          on: {
            spa: () => onCancel("Пока не реализовано"),
            cancel: onCancel,
            "frontend-micro": (comand) => createmicrofrontend({ type: comand }),
            "frontend-micro-adv": (comand) =>
              createmicrofrontend({ type: comand }),
          },
        },
      },
    },
  },
};

export const goPrompts = async (data) => {
  const { comand } = await prompts(data.prompt);
  console.log(comand);
  const ressult = data?.on[comand]?.(comand !== "cancel" ? comand : void 0);
  if (ressult && "then" in ressult) await ressult;
  data?.next?.[comand] && (await goPrompts(data.next[comand]));
};
